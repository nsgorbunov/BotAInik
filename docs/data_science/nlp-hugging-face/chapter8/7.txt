

# Тест в конце главы[[end-of-chapter-quiz]]

",
			explain: "Включение последней строки трассировки может быть описательным, но это лучше оставить для основной части темы. Попробуйте еще раз!"
		},
		{
			text: "Проблема с  ",
			explain: "Попробуйте еще раз - хотя это и полезная информация, ее лучше оставить для основной части текста.",
		},
		{
			text: "Почему я не могу импортировать ?",
			explain: "Отличный выбор! Это название лаконично и дает читателю понять, что может быть не так (например, что GPT-3 не поддерживается в  Transformers).",
			correct: true
		},
		{
			text: "Поддерживается ли GPT-3 в  Transformers?",
			explain: "Отличный вариант! Использование вопросов в качестве заголовков тем - отличный способ донести проблему до сообщества.",
			correct: true
		}
	]}
/>

### 4. Предположим, вы пытаетесь запустить `trainer.train()` и сталкиваетесь с загадочной ошибкой, которая не говорит вам, откуда именно она взялась. Что из нижеперечисленного является первым местом, где вы должны искать ошибки в вашем конвейере обучения?



### 5. Каков наилучший способ отладки ошибок CUDA?



### 6. Как лучше всего сообщить о проблеме на GitHub?



### 7. Почему переобучение модели с одним батчем обычно является хорошим методом отладки?



### 8. Почему при создании нового вопроса в репозитории   Transformers стоит указать подробности о вашем  окружении разработки с помощью `transformers-cli env`??



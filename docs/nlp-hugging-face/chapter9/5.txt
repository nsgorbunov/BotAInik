# Интеграция с Hugging Face Hub[[integrations-with-the-hugging-face-hub]]

"

gr.Interface.load(
    "huggingface/EleutherAI/gpt-j-6B",
    inputs=gr.Textbox(lines=5, label="Input Text"),
    title=title,
    description=description,
    article=article,
).launch()
```
    
Код, приведенный выше, приведет к созданию интерфейса, представленного ниже:



Загрузка модели таким образом использует Inference API Hugging Face,
вместо того, чтобы загружать модель в память. Это идеально подходит для огромных моделей, таких как GPT-J или T0pp, которые
 которые требуют много RAM.

### Загрузка с Hugging Face Spaces[[loading-from-hugging-face-spaces]]
Чтобы загрузить любое пространство (Space) из Hugging Face Hub и воссоздать его локально, вы можете передать `spaces/` в `Interface`, за которым следует имя пространства.

Помните демо из раздела 1, которое удаляет фон изображения? Давайте загрузим его из Hugging Face Spaces:

```py
gr.Interface.load("spaces/abidlabs/remove-bg").launch()
```



Одна из особенностей загрузки демо из Hub или Spaces заключается в том, что вы можете настраивать их 
переопределив любой из 
параметров. Здесь мы добавим заголовок и задействуем веб-камеру:

```py
gr.Interface.load(
    "spaces/abidlabs/remove-bg", inputs="webcam", title="Remove your webcam background!"
).launch()
```



Теперь, когда мы изучили несколько способов интеграции Gradio с Hugging Face Hub, давайте рассмотрим некоторые дополнительные возможности класса `Interface`. Этому будет посвящен следующий раздел!